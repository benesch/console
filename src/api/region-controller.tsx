/* Generated by restful-react */

import React from "react";
import {
  Get,
  GetProps,
  Mutate,
  MutateProps,
  useGet,
  UseGetProps,
  useMutate,
  UseMutateProps,
} from "restful-react";
export const SPEC_VERSION = "0.1.0";
export interface EnvironmentAssignment {
  cluster: string;
  environmentControllerUrl: string;
}

export interface EnvironmentAssignmentRequest {
  environmentdImageRef?: string;
  important?: boolean;
  environmentdExtraArgs?: string[];
}

export type EnvironmentAssignmentsListProps = Omit<
  GetProps<EnvironmentAssignment[], unknown, void, void>,
  "path"
>;

/**
 * List the available environment assignments
 */
export const EnvironmentAssignmentsList = (
  props: EnvironmentAssignmentsListProps
) => (
  <Get<EnvironmentAssignment[], unknown, void, void>
    path="/api/environmentassignment"
    {...props}
  />
);

export type UseEnvironmentAssignmentsListProps = Omit<
  UseGetProps<EnvironmentAssignment[], unknown, void, void>,
  "path"
>;

/**
 * List the available environment assignments
 */
export const useEnvironmentAssignmentsList = (
  props: UseEnvironmentAssignmentsListProps
) =>
  useGet<EnvironmentAssignment[], unknown, void, void>(
    `/api/environmentassignment`,
    props
  );

export type EnvironmentAssignmentsCreateProps = Omit<
  MutateProps<
    EnvironmentAssignment,
    unknown,
    void,
    EnvironmentAssignmentRequest,
    void
  >,
  "path" | "verb"
>;

/**
 * Create a new environment assignment.
 */
export const EnvironmentAssignmentsCreate = (
  props: EnvironmentAssignmentsCreateProps
) => (
  <Mutate<
    EnvironmentAssignment,
    unknown,
    void,
    EnvironmentAssignmentRequest,
    void
  >
    verb="POST"
    path="/api/environmentassignment"
    {...props}
  />
);

export type UseEnvironmentAssignmentsCreateProps = Omit<
  UseMutateProps<
    EnvironmentAssignment,
    unknown,
    void,
    EnvironmentAssignmentRequest,
    void
  >,
  "path" | "verb"
>;

/**
 * Create a new environment assignment.
 */
export const useEnvironmentAssignmentsCreate = (
  props: UseEnvironmentAssignmentsCreateProps
) =>
  useMutate<
    EnvironmentAssignment,
    unknown,
    void,
    EnvironmentAssignmentRequest,
    void
  >("POST", `/api/environmentassignment`, props);

export type EnvironmentAssignmentsDestroyProps = Omit<
  MutateProps<void, unknown, void, void, void>,
  "path" | "verb"
>;

/**
 * Destroy an environment assignment.
 */
export const EnvironmentAssignmentsDestroy = (
  props: EnvironmentAssignmentsDestroyProps
) => (
  <Mutate<void, unknown, void, void, void>
    verb="DELETE"
    path="/api/environmentassignment"
    {...props}
  />
);

export type UseEnvironmentAssignmentsDestroyProps = Omit<
  UseMutateProps<void, unknown, void, void, void>,
  "path" | "verb"
>;

/**
 * Destroy an environment assignment.
 */
export const useEnvironmentAssignmentsDestroy = (
  props: UseEnvironmentAssignmentsDestroyProps
) =>
  useMutate<void, unknown, void, void, void>(
    "DELETE",
    `/api/environmentassignment`,
    { ...props }
  );

export type HealthRetrieveProps = Omit<
  GetProps<void, unknown, void, void>,
  "path"
>;

/**
 * Basic health check endpoint.
 *
 * This endpoint always returns 200 OK. It is intended for use by load
 * balancers and such that need a basic indication as to whether the server is
 * live.
 */
export const HealthRetrieve = (props: HealthRetrieveProps) => (
  <Get<void, unknown, void, void> path="/api/health" {...props} />
);

export type UseHealthRetrieveProps = Omit<
  UseGetProps<void, unknown, void, void>,
  "path"
>;

/**
 * Basic health check endpoint.
 *
 * This endpoint always returns 200 OK. It is intended for use by load
 * balancers and such that need a basic indication as to whether the server is
 * live.
 */
export const useHealthRetrieve = (props: UseHealthRetrieveProps) =>
  useGet<void, unknown, void, void>(`/api/health`, props);
